## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Manage Brackets'
description: |-

  API end-poitns to manage tournament brackets.
endpoints:
  -
    httpMethods:
      - POST
    uri: 'tournaments/{tournament}/brackets'
    metadata:
      title: 'Create new brackets'
      description: 'Brackets will be filled randomly with players associated with the tournament. Brackets will be build until the final bracket.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      tournament:
        name: tournament
        description: ''
        required: true
        example: 5
        type: integer
        custom: []
    queryParameters:
      'enum(tree,list)':
        name: 'enum(tree,list)'
        description: 'Defaults to "tree". Returns created brackets in tree or list.<br/>For **trees**, brackets will be structured recursively in a **```binary tree```**, under the ```prev_match``` attribute with the last match acting as root.<br/>For **lists**, brackets will be structured in an **```array```**.'
        required: false
        example: doloribus
        type: string
        custom: []
    bodyParameters: []
    responses:
      -
        status: 0
        content: |-
          {
            "brackets": [
              {
                "match": 1,
                "player": {
                  "name": "Adi",
                  "_url": "/players/1",
                  "tournament_url": "/tournaments/2"
                },
                "prev_match": null,
                "_url": "/tournaments/2/brackets/1"
              },{
                "match": 2,
                "player": {
                  "name": "Budi",
                  "_url": "/players/2",
                  "tournament_url": "/tournaments/2"
                },
                "prev_match": null,
                "_url": "/tournaments/2/brackets/2"
              },{
                "match": 3,
                "player": null,
                "prev_match": {
                  "left": {
                    "match": 1,
                    "player": {
                      "name": "Adi",
                      "_url": "/players/1",
                      "tournament_url": "/tournaments/2"
                    },
                    "_url": "/tournaments/2/brackets/1"
                  },
                  "right": {
                    "match": 2,
                    "player": {
                      "name": "Budi",
                      "_url": "/players/2",
                      "tournament_url": "/tournaments/2"
                    },
                    "_url": "/tournaments/2/brackets/2"
                  }
                },
                "_url": "/tournaments/2/brackets/3"
              }
            ],
            "_url": "/tournaments/2/brackets",
            "tournament_url": "/tournaments/2"
          }
        headers: []
        description: Created
    responseFields:
      brackets:
        name: brackets
        description: 'Array of bracket objects.'
        type: 'object[]'
      brackets.match:
        name: brackets.match
        description: 'Consider this the identifier of a bracket in a tournament.'
        type: integer
      brackets.player:
        name: brackets.player
        description: 'Player in this bracket. If **null**, it means that the bracket has no player yet.'
        type: object
      brackets._url:
        name: brackets._url
        description: 'URL to bracket.'
        type: string
      brackets.prev_match:
        name: brackets.prev_match
        description: 'Previous match. Seperated to left and right side. If **null**, it means that the bracket has no previous match.'
        type: object
      brackets.prev_match.left:
        name: brackets.prev_match.left
        description: 'Prevous match on the left side.'
        type: object
      brackets.prev_match.right:
        name: brackets.prev_match.right
        description: 'Prevous match on the right side.'
        type: object
      _url:
        name: _url
        description: 'URL to bracket list of the tournament.'
        type: string
      tournament_url:
        name: tournament_url
        description: 'URL to the tournament.'
        type: string
